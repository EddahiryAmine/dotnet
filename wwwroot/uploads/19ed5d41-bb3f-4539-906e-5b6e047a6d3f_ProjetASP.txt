using Microsoft.AspNetCore.Identity;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

public class ApplicationUser : IdentityUser
{
    [Required]
    public string FullName { get; set; } // Nom complet du professeur/élève
    public ICollection<Reservation> Reservations { get; set; } // Liste des réservations faites par l'utilisateur
}

public class Document
{
    [Key]
    public int DocumentId { get; set; }

    [Required]
    public string Title { get; set; } // Titre du document (cours, TP, etc.)

    [Required]
    public string FilePath { get; set; } // Chemin du fichier stocké

    [Required]
    public DateTime UploadDate { get; set; } // Date de dépôt

    public string FileType { get; set; } // Type de fichier (PDF, Word, etc.)

    // Relation avec le professeur qui a déposé le document
    [Required]
    public string UploadedById { get; set; }
    public ApplicationUser UploadedBy { get; set; }

    // Relation avec une matière
    public int SubjectId { get; set; }
    public Subject Subject { get; set; }
}

public class Room
{
    [Key]
    public int RoomId { get; set; }

    [Required]
    public string Name { get; set; } // Nom de la salle

    public string Location { get; set; } // Emplacement de la salle (facultatif)

    public ICollection<Reservation> Reservations { get; set; } // Liste des réservations de la salle
}

public class Reservation
{
    [Key]
    public int ReservationId { get; set; }

    [Required]
    public DateTime StartTime { get; set; } // Heure de début de la réservation

    [Required]
    public DateTime EndTime { get; set; } // Heure de fin

    // Relation avec l'utilisateur qui fait la réservation
    [Required]
    public string UserId { get; set; }
    public ApplicationUser User { get; set; }

    // Relation avec la salle réservée
    public int RoomId { get; set; }
    public Room Room { get; set; }
}

public class Subject
{
    [Key]
    public int SubjectId { get; set; }

    [Required]
    public string Name { get; set; } // Nom de la matière (ex : Mathématiques, Physique)

    public ICollection<Document> Documents { get; set; } // Liste des documents liés à la matière
}
------------------------------------------------------------------------------
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;

public class AppDbContext : IdentityDbContext<ApplicationUser>
{
    public DbSet<Document> Documents { get; set; }
    public DbSet<Room> Rooms { get; set; }
    public DbSet<Reservation> Reservations { get; set; }
    public DbSet<Subject> Subjects { get; set; }

    public AppDbContext(DbContextOptions<AppDbContext> options) : base(options)
    {
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);

        // Configurer les relations et contraintes
        modelBuilder.Entity<Reservation>()
            .HasOne(r => r.User)
            .WithMany(u => u.Reservations)
            .HasForeignKey(r => r.UserId)
            .OnDelete(DeleteBehavior.Cascade);

        modelBuilder.Entity<Reservation>()
            .HasOne(r => r.Room)
            .WithMany(room => room.Reservations)
            .HasForeignKey(r => r.RoomId)
            .OnDelete(DeleteBehavior.Cascade);

        modelBuilder.Entity<Document>()
            .HasOne(d => d.UploadedBy)
            .WithMany()
            .HasForeignKey(d => d.UploadedById)
            .OnDelete(DeleteBehavior.Cascade);

        modelBuilder.Entity<Document>()
            .HasOne(d => d.Subject)
            .WithMany(s => s.Documents)
            .HasForeignKey(d => d.SubjectId);
    }
}
